ext {
    versions = [
            springBoot: "2.7.12",
            postgresql: "42.6.0",
            lombok    : "1.18.28",
            mapstruct : "1.5.5.Final",
            openapi   : "1.7.0",
            jwt: "4.4.0",
            springCloud: "3.1.8",
            circuitBreaker: "2.1.7",
    ]
    //ctrl + alt + l --> formatlar
    libs = [
            springBootWeb   : "org.springframework.boot:spring-boot-starter-web:$versions.springBoot",
            springBootJpa     : "org.springframework.boot:spring-boot-starter-data-jpa:$versions.springBoot",
            springBootValidation: "org.springframework.boot:spring-boot-starter-validation:$versions.springBoot",
            springBootRabbitMq: "org.springframework.boot:spring-boot-starter-amqp:$versions.springBoot",
            springBootMailSender: "org.springframework.boot:spring-boot-starter-mail:$versions.springBoot",
            springBootRedis: "org.springframework.boot:spring-boot-starter-data-redis:$versions.springBoot",
            springBootElasticSearch: "org.springframework.boot:spring-boot-starter-data-elasticsearch:$versions.springBoot",
            springBootDataMongo: "org.springframework.boot:spring-boot-starter-data-mongodb:$versions.springBoot",
            springBootSecurity:"org.springframework.boot:spring-boot-starter-security:$versions.springBoot",
            postgresql        : "org.postgresql:postgresql:$versions.postgresql",
            lombok            : "org.projectlombok:lombok:$versions.lombok",
            mapstruct         : "org.mapstruct:mapstruct:$versions.mapstruct",
            mapstructProcessor: "org.mapstruct:mapstruct-processor:$versions.mapstruct",
            openapi           : "org.springdoc:springdoc-openapi-ui:$versions.openapi",
            javaJwt: "com.auth0:java-jwt:$versions.jwt",
            springCloudOpenFeign: "org.springframework.cloud:spring-cloud-starter-openfeign:$versions.springCloud",
            springCloudConfigStarter: "org.springframework.cloud:spring-cloud-starter-config:$versions.springCloud",
            springCloudConfigClient: "org.springframework.cloud:spring-cloud-config-client:$versions.springCloud",
            springCloudConfigServer: "org.springframework.cloud:spring-cloud-config-server:$versions.springCloud",
            springCloudStarterGateway: "org.springframework.cloud:spring-cloud-starter-gateway:$versions.springCloud",
            springCloudCircuitBreaker: "org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j:$versions.circuitBreaker",
            springCloudCircuitBreakerReactor: "org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j:$versions.circuitBreaker",
            springCloudZipkin: "org.springframework.cloud:spring-cloud-sleuth-zipkin:$versions.springCloud",
            springCloudSleuth: "org.springframework.cloud:spring-cloud-starter-sleuth:$versions.springCloud",

    ]
}